<style>
a.linkz {
    position: relative;
}
.linkz-popover {
  position: absolute;
  bottom: 100%;
}

.linkz-popover .linkz-popover-content {
    display: block;
    background-color: #f9f9f9;
    border: 1px solid #ccc;
    padding: 10px;
    border-radius: 4px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
}
.linkz-popover:before {
  content: '';
  {/*border-left: 5px solid transparent;*/}
  {/*border-right: 5px solid transparent;*/}
  {/*border-bottom: 5px solid black;*/}
  display: block;
  width: 5px;
  height: 5px;
  margin: auto;
}

.linkz-loader {
  animation: linkzrotate 2s linear infinite;
  width: 50px;
  height: 50px;
}

.linkz-loader-circle {
  stroke: #555;
  stroke-dasharray: 30;
  stroke-dashoffset: 0;
  animation: linkzdash 1.5s ease-in-out infinite;
}

.flexContainer{
  display: flex;
}

.popoverTitle{
  margin-left: 16px;
}

.popoverTitle h4{
  margin-top: 0px;
  margin-bottom: 3px;
  font-size: 12px;
  font-weight: 600;
  text-align: -webkit-left;
}
img#favIcon {
  width: 25px;
}
p#decription {
  margin-bottom: 0px;
  text-align: -webkit-left;
  font-size: 13px;
  line-height: 16px;
}
#app-url{
  text-align: -webkit-left;
  font-size: 13px;
  line-height: 16px;
  margin-top: 0px;
  margin-bottom: 7px;
  display:none;
}

#popover-image{
  width: 300px;
  height: 150px;
}

@keyframes linkzrotate {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes linkzdash {
  0% {
    stroke-dashoffset: 30;
  }
  50% {
    stroke-dashoffset: 0;
  }
  100% {
    stroke-dashoffset: 30;
  }
}
</style>
<script>
async function getThirdPartyUrls() {
  const currentHostname = window.location.hostname;
  const anchors = document.getElementsByTagName('a');

  for (let i = 0; i < anchors.length; i++) {
    const anchor = anchors[i];
    if(!anchor.href){
      continue;
    }
    const url = new URL(anchor.href);

    if (url.hostname !== currentHostname) {
      anchor.classList.add('linkz');
      anchor.addEventListener('mouseover', handleMouseOveLinkz);
      anchor.addEventListener('mouseout', handleMouseOutLinkz);
    }
  }
  return true;
}

// Event handler for mouseover
async function handleMouseOveLinkz(event) {
  const element = event.target;
  console.log(element)
  console.log('Mouse over:', element.textContent);


  const htmlContent = `<div class="linkz-popover">
    <div class="linkz-popover-content">
      <svg class="linkz-loader" viewBox="0 0 50 50">
        <circle class="linkz-loader-circle" cx="25" cy="25" r="20" fill="none" stroke-width="4"></circle>
      </svg>
      
      <div class="flexContainer">
        <div class="favIconDiv">
          <img id="favIcon"/>
        </div>
        <div class="popoverTitle">
          <h4 id="og-title" style="color:{{ block.settings.color }}; font-family: {{block.settings.heading_font}}"></h4>
          <p id="app-url">Shopify.com</p>
        </div>
      </div>
      
      <img id="popover-image"/> 
      <p id="decription" style="color:{{ block.settings.color }}; font-family: {{block.settings.heading_font}}"></p>
    </div>
  </div>`;


  element.insertAdjacentHTML('beforeend', htmlContent);
  var getData = await fetch('https://pump-leone-furthermore-embedded.trycloudflare.com/api/meta?url='+encodeURIComponent(element.href));
  console.log(getData);
  var allMeta = await getData.json();
  console.log("meta data",allMeta)

  if(allMeta.length > 0){
    element.querySelector("#app-url").style.display = "block";
    document.getElementsByClassName("linkz-loader")[0].remove();
    element.querySelector("#favIcon").setAttribute("src", allMeta[16].content);
    element.querySelector("#og-title").innerHTML = allMeta[6].content;
    element.querySelector("#popover-image").setAttribute("src", allMeta[8].content);
    element.querySelector("#decription").innerHTML = allMeta[1].content;
  }
}

// Event handler for mouseout
function handleMouseOutLinkz(event) {
  const element = event.target;
  console.log('Mouse out:', element.textContent);
  element.querySelector('.linkz-popover').remove();
}

getThirdPartyUrls();
</script>
{% schema %}
  {
    "name": "Linkz App",
    "target": "body",
    "settings": [        
       {
          "label": "Color", "id": "color", "type": "color", "default": "#000000"
        },
        {
          "type": "font_picker",
          "id": "heading_font",
          "label": "Heading font",
          "default": "helvetica_n4"
        }
      ]
  }
{% endschema %}
